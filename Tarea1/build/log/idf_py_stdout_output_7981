[1/9] Performing build step for 'bootloader'
[1/1] cd /home/felipe/Desktop/Tareas/Embebidos/Tarea1/build/bootloader/esp-idf/esptool_py && /home/felipe/.espressif/python_env/idf5.1_py3.10_env/bin/python /home/felipe/esp/esp-idf/components/partition_table/check_sizes.py --offset 0x8000 bootloader 0x1000 /home/felipe/Desktop/Tareas/Embebidos/Tarea1/build/bootloader/bootloader.bin
Bootloader binary size 0x6820 bytes. 0x7e0 bytes (7%) free.
[2/7] Building C object esp-idf/main/CMakeFiles/__idf_main.dir/main.c.obj
/home/felipe/Desktop/Tareas/Embebidos/Tarea1/main/main.c: In function 'app_main':
/home/felipe/Desktop/Tareas/Embebidos/Tarea1/main/main.c:37:40: warning: passing argument 3 of 'bmi_write' from incompatible pointer type [-Wincompatible-pointer-types]
   37 |     bmi_write(I2C_NUM_0, &reg_acc_rng, &ACC_RANGE,1);
      |                                        ^~~~~~~~~~
      |                                        |
      |                                        uint * {aka unsigned int *}
In file included from /home/felipe/Desktop/Tareas/Embebidos/Tarea1/main/main.c:2:
/home/felipe/Desktop/Tareas/Embebidos/Tarea1/main/BMI270.c:487:71: note: expected 'uint8_t *' {aka 'unsigned char *'} but argument is of type 'uint *' {aka 'unsigned int *'}
  487 | esp_err_t bmi_write(i2c_port_t i2c_num,uint8_t *data_addres, uint8_t *data_wr ,size_t size)
      |                                                              ~~~~~~~~~^~~~~~~
/home/felipe/Desktop/Tareas/Embebidos/Tarea1/main/main.c:39:40: warning: passing argument 3 of 'bmi_write' from incompatible pointer type [-Wincompatible-pointer-types]
   39 |     bmi_write(I2C_NUM_0, &reg_gyr_rng, &GYR_RANGE,1);
      |                                        ^~~~~~~~~~
      |                                        |
      |                                        uint * {aka unsigned int *}
/home/felipe/Desktop/Tareas/Embebidos/Tarea1/main/BMI270.c:487:71: note: expected 'uint8_t *' {aka 'unsigned char *'} but argument is of type 'uint *' {aka 'unsigned int *'}
  487 | esp_err_t bmi_write(i2c_port_t i2c_num,uint8_t *data_addres, uint8_t *data_wr ,size_t size)
      |                                                              ~~~~~~~~~^~~~~~~
[3/7] Linking C static library esp-idf/main/libmain.a
[4/7] Generating ld/sections.ld
[5/7] Linking CXX executable i2c-simple.elf
[6/7] Generating binary image from built executable
esptool.py v4.5.1
Creating esp32 image...
Merged 2 ELF sections
Successfully created esp32 image.
Generated /home/felipe/Desktop/Tareas/Embebidos/Tarea1/build/i2c-simple.bin
[7/7] cd /home/felipe/Desktop/Tareas/Embebidos/Tarea1/build/esp-idf/esptool_py && /home/felipe/.espressif/python_env/idf5.1_py3.10_env/bin/python /home/felipe/esp/esp-idf/components/partition_table/check_sizes.py --offset 0x8000 partition --type app /home/felipe/Desktop/Tareas/Embebidos/Tarea1/build/partition_table/partition-table.bin /home/felipe/Desktop/Tareas/Embebidos/Tarea1/build/i2c-simple.bin
i2c-simple.bin binary size 0x323d0 bytes. Smallest app partition is 0x100000 bytes. 0xcdc30 bytes (80%) free.
